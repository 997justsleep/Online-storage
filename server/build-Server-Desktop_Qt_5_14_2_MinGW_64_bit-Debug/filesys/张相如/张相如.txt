A
#include<iostream>
using namespace std;

int main(){
	cout<<2730;
	return 0;
} 
B
#include<iostream>
#include<queue>
using namespace std;
const int n=30,m=60;
int ans=0;
int num;
char g[40][70];
bool vis[40][70];
int dx[]={1,-1,0,0};
int dy[]={0,0,1,-1};
struct node{
	int x,y;
};

void bfs(node p){
	queue<node>que;
	que.push(p);
	while(!que.empty()){
		node cur=que.front();
		que.pop();
		for(int i=0;i<4;i++){
			int bx=cur.x+dx[i];
			int by=cur.y+dy[i];
			if(bx<1||bx>30||by<1||by>60)continue;
			if(vis[bx][by]||g[bx][by]=='0')continue;
			num++;
			vis[bx][by]=1;
			que.push({bx,by});
		}
	}
}

int main(){
	/*for(int i=1;i<=30;i++){
		for(int j=1;j<=60;j++){
			cin>>g[i][j];
		}
	}
	for(int i=1;i<=30;i++){
		for(int j=1;j<=60;j++){
			if(vis[i][j])continue;
			if(g[i][j]=='0')continue;
			num=1;
			vis[i][j]=1;
			bfs({i,j});
			ans=ans>num?ans:num;
		}
	}
	cout<<ans;*/
	cout<<148;
	return 0;
} 
C
#include<iostream>
#include<queue>
using namespace std;
int w[]={7,1,2,3,4,5,6};

int main(){
	int n,m;
	cin>>n>>m;
	int num=m%7;
	n+=num;
	cout<<w[n%7];
	return 0;
} 
D
#include<iostream>
#include<queue>
using namespace std;
#define int long long

signed main(){
	long double l;
	cin>>l;
	int ans=0;
	while(l>1){
		l/=2;
		ans++;
	}
	cout<<ans;
	return 0;
} 
E
#include<iostream>
#include<string>
using namespace std;
int num[10];

int main(){
	string s;
	cin>>s;
	for(auto it:s){
		num[it-'0']++;
	}
	for(auto it:num){
		cout<<it<<" ";
	}
	return 0;
} 
F
#include<iostream>
using namespace std;
const int N=1e2+10;
bool g[N][N];

int main(){
	int n,m,t;
	cin>>n>>m>>t;
	while(t--){
		int r1,c1,r2,c2;
		cin>>r1>>c1>>r2>>c2;
		for(int i=r1;i<=r2;i++){
			for(int j=c1;j<=c2;j++){
				g[i][j]=1;
			}
		}
	}
	int ans=0;
	for(int i=1;i<=n;i++){
		for(int j=1;j<=m;j++){
			if(!g[i][j]) ans++;
		}
	}
	cout<<ans;
	return 0;
} 
G
#include<iostream>
#include<string>
using namespace std;

int main(){
	int n,m;
	cin>>n>>m;
	string s;
	cin>>s;
	s+=' ';
	for(int i=1;i<=m;i++){
		int id;
		for(int j=0;j<s.size()-1;j++){
			if(s[j]>s[j+1]){
				id=j;
				break;
			}
		}
		s.erase(id,1);
	}
	cout<<s;
	return 0;
} 
H
#include<iostream>
#include<cmath>
using namespace std;
const int N=1e2+10;
int g[N][N];

int main(){
	int w,h,n,r;
	cin>>w>>h>>n>>r;
	for(int i=1;i<=n;i++){
		int x,y;
		cin>>x>>y;
		for(int i=0;i<=w;i++){
			for(int j=0;j<=h;j++){
				if(pow(abs(i-x),2)+pow(abs(j-y),2)<=r*r){
					g[i][j]++;
				}
			}
		}
	}
	int ans=0;
	for(int i=0;i<=w;i++){
		for(int j=0;j<=h;j++){
			if(g[i][j]) ans++;
		}
	}
	cout<<ans;
	return 0;
} 
I
#include<iostream>
#include<cstring>
using namespace std;
const int N=1e5+10,M=1e6+1;
int a[N];
int b[M];

int main(){
	int n;
	cin>>n;
	for(int i=1;i<=n;i++){
		cin>>a[i];
	}
	for(int i=3;i<=n;i++){
		memset(b,0,sizeof b);
		for(int j=1;j<=i;j++){
			b[a[j]]++;
		}
		int num=3;
		for(int j=0;j<=M;j++){
			if(b[j])num-=b[j];
			if(num<=0){
				cout<<j<<" ";
				break;
			}
		}
	}
	return 0;
} 
J
#include<iostream>
#include<climits>
using namespace std;
const int N=1e6+10;
int a[N];

int main(){
	int n,k;
	cin>>n;
	for(int i=1;i<=n;i++){
		cin>>a[i];
	}
	cin>>k;
	for(int i=1;i<=n;i++){
		int mn=INT_MAX;
		for(int j=i-k;j<=i+k;j++){
			if(j<1||j>n)continue;
			mn=mn<a[j]?mn:a[j];
		}
		cout<<mn<<" ";
	}
	return 0;
}

